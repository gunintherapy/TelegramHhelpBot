import logging
import asyncio
import os

from aiogram import Bot, Dispatcher, types
from aiogram.enums.parse_mode import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

API_TOKEN = os.getenv("API_TOKEN")
if not API_TOKEN:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è API_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())

questions = [
    "1Ô∏è‚É£ –ß–∞—Å—Ç–æ –ª–∏ –≤–∞—à –±–ª–∏–∑–∫–∏–π <b>–∏—Å—á–µ–∑–∞–µ—Ç –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π</b>, –æ—Ç–∫–ª—é—á–∞–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –≤–µ–¥—ë—Ç —Å–µ–±—è —Å–∫—Ä—ã—Ç–Ω–æ?",
    "2Ô∏è‚É£ –ù–∞–±–ª—é–¥–∞–µ—Ç–µ –ª–∏ –≤—ã <b>—Ä–µ–∑–∫–∏–µ –ø–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</b>, –≤—Å–ø—ã—à–∫–∏ –∑–ª–æ—Å—Ç–∏, —Å–ª—ë–∑ –±–µ–∑ –ø–æ–≤–æ–¥–∞?",
    "3Ô∏è‚É£ –ü—Ä–æ–ø–∞–¥–∞—é—Ç –ª–∏ <b>–¥–µ–Ω—å–≥–∏ –∏–ª–∏ –≤–µ—â–∏</b> –∏–∑ –¥–æ–º–∞? –ß–∞—Å—Ç–æ –ª–∏ –æ–Ω/–æ–Ω–∞ –ø—Ä–æ—Å–∏—Ç –∑–∞–Ω—è—Ç—å?",
    "4Ô∏è‚É£ –ü–æ–π–º–∞–ª–∏ –ª–∏ –≤—ã –±–ª–∏–∑–∫–æ–≥–æ <b>–Ω–∞ –ª–∂–∏</b> –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞?",
    "5Ô∏è‚É£ –°–∏–ª—å–Ω–æ –ª–∏ <b>–ø–æ–º–µ–Ω—è–ª—Å—è –∫—Ä—É–≥ –æ–±—â–µ–Ω–∏—è</b>? –ü–æ—è–≤–∏–ª–∏—Å—å —Å—Ç—Ä–∞–Ω–Ω—ã–µ –Ω–æ–≤—ã–µ –¥—Ä—É–∑—å—è?",
    "6Ô∏è‚É£ –ï—Å—Ç—å –ª–∏ <b>–ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–±–æ—Ç–æ–π –∏–ª–∏ —É—á—ë–±–æ–π</b>: –ø—Ä–æ–≥—É–ª—ã, —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ, –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã?",
    "7Ô∏è‚É£ –ò–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ <b>–≤–Ω–µ—à–Ω–æ—Å—Ç—å</b>: –ø–æ—Ö—É–¥–µ–Ω–∏–µ, –º–µ—à–∫–∏ –ø–æ–¥ –≥–ª–∞–∑–∞–º–∏, —Å–µ—Ä—ã–π —Ü–≤–µ—Ç –ª–∏—Ü–∞?",
    "8Ô∏è‚É£ –ï—Å—Ç—å –ª–∏ <b>–ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–Ω–æ–º</b>: –±–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞, —Å–ø–∏—Ç –¥–Ω—ë–º, –±–æ–¥—Ä—Å—Ç–≤—É–µ—Ç –Ω–æ—á—å—é?",
    "9Ô∏è‚É£ –ù–∞ –≤–∞—à–∏ –æ–ø–∞—Å–µ–Ω–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç <b>–∞–≥—Ä–µ—Å—Å–∏–µ–π –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ–º</b>?",
    "üîü –ß—É–≤—Å—Ç–≤—É–µ—Ç–µ –ª–∏ –≤—ã <b>—É—Å—Ç–∞–ª–æ—Å—Ç—å, —Ç—Ä–µ–≤–æ–≥—É, –±–µ—Å—Å–∏–ª–∏–µ</b> –∏ –ø—ã—Ç–∞–µ—Ç–µ—Å—å –≤—Å—ë –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å?"
]

yes_no_kb = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="–î–∞"), KeyboardButton(text="–ù–µ—Ç")]],
    resize_keyboard=True,
    one_time_keyboard=True
)

class TestStates(StatesGroup):
    question = State()

user_data = {}

@dp.message(commands=["start"])
async def cmd_start(message: types.Message, state: FSMContext):
    await state.clear()
    user_data[message.from_user.id] = {"score": 0, "index": 0}
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —á–µ–∫-–ª–∏—Å—Ç: <b>¬´10 –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, —á—Ç–æ –≤–∞—à –±–ª–∏–∑–∫–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏¬ª</b>"


        "–û—Ç–≤–µ—á–∞–π —á–µ—Å—Ç–Ω–æ: <b>–î–∞</b> –∏–ª–∏ <b>–ù–µ—Ç</b>. –ü–æ–µ—Ö–∞–ª–∏!",
        reply_markup=yes_no_kb
    )
    await state.set_state(TestStates.question)
    await message.answer(questions[0])

@dp.message(TestStates.question)
async def process_question(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    data = user_data.get(user_id)

    if message.text.lower() == "–¥–∞":
        data["score"] += 1

    data["index"] += 1

    if data["index"] < len(questions):
        await message.answer(questions[data["index"]])
    else:
           score = data["score"]
    text = f"‚úÖ –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ ¬´–¥–∞¬ª –Ω–∞ {score} –∏–∑ 10 –≤–æ–ø—Ä–æ—Å–æ–≤.\n"



    if score >= 5:
    text += "‚ö†Ô∏è –≠—Ç–æ —Å–µ—Ä—å—ë–∑–Ω—ã–π –ø–æ–≤–æ–¥ –∑–∞–¥—É–º–∞—Ç—å—Å—è. –ü–æ—Ö–æ–∂–µ, —É –≤–∞—à–µ–≥–æ –±–ª–∏–∑–∫–æ–≥–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å.\n" \
            "–ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ. –ü–æ–º–æ—â—å –µ—Å—Ç—å ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.\n" \
            "<b>üì© –ú–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä—è–º–æ —Å—é–¥–∞ ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞.</b>"
elif 3 <= score < 5:
    text += "üü° –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –µ—Å—Ç—å. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—á–∞–ª—å–Ω–∞—è —Å—Ç–∞–¥–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–ª–∏ –¥—Ä—É–≥–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å.\n" \
            "–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –∏ –Ω–µ –±–æ–π—Ç–µ—Å—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π."
else:
    text += "üü¢ –ü–æ–∫–∞ —á—Ç–æ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –Ω–µ—Ç. –ù–æ –Ω–µ —Ç–µ—Ä—è–π—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å."

message.reply_text(text, reply_markup=ReplyKeyboardRemove(), parse_mode="HTML")

async def main():
    await dp.start_polling(bot)

if name == "__main__":
    asyncio.run(main())
