import os
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext

BOT_TOKEN = os.environ.get("BOT_TOKEN")
if not BOT_TOKEN:
    print("–û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
    exit()

questions = {
    1: {'text': '–£–ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç –ª–∏ –≤–∞—à –±–ª–∏–∑–∫–∏–π –∞–ª–∫–æ–≥–æ–ª—å –∏–ª–∏ –Ω–∞—Ä–∫–æ—Ç–∏–∫–∏ —á–∞—â–µ, —á–µ–º —Ä–∞–Ω—å—à–µ?', 'options': [{'text': '–î–∞', 'score': 1}, {'text': '–ù–µ—Ç', 'score': 0}]},
    2: {'text': '–°–∫—Ä—ã–≤–∞–µ—Ç –ª–∏ –æ–Ω/–æ–Ω–∞ —Å–≤–æ—ë —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –æ—Ç –≤–∞—Å?', 'options': [{'text': '–î–∞', 'score': 1}, {'text': '–ù–µ—Ç', 'score': 0}]},
    3: {'text': '–°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ª–∏ –æ–Ω/–æ–Ω–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º –∏–ª–∏ —Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω—ã–º –±–µ–∑ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è?', 'options': [{'text': '–î–∞', 'score': 1}, {'text': '–ù–µ—Ç', 'score': 0}]},
    4: {'text': '–û—Ç—Ä–∏—Ü–∞–µ—Ç –ª–∏ –ø—Ä–æ–±–ª–µ–º—É, –¥–∞–∂–µ –ø—Ä–∏ –æ—á–µ–≤–∏–¥–Ω—ã—Ö –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è—Ö?', 'options': [{'text': '–î–∞', 'score': 1}, {'text': '–ù–µ—Ç', 'score': 0}]},
    5: {'text': '–ú–µ–Ω—è–µ—Ç—Å—è –ª–∏ –µ–≥–æ/–µ—ë –∫—Ä—É–≥ –æ–±—â–µ–Ω–∏—è?', 'options': [{'text': '–î–∞', 'score': 1}, {'text': '–ù–µ—Ç', 'score': 0}]},
    6: {'text': '–ï—Å—Ç—å –ª–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ–º?', 'options': [{'text': '–î–∞', 'score': 1}, {'text': '–ù–µ—Ç', 'score': 0}]},
    7: {'text': '–ó–∞–º–µ—á–∞–µ—Ç–µ –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–±–æ—Ç–æ–π/—É—á—ë–±–æ–π?', 'options': [{'text': '–î–∞', 'score': 1}, {'text': '–ù–µ—Ç', 'score': 0}]},
    8: {'text': '–ë—ã–ª–∏ –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–∫–æ–Ω–æ–º –∏–∑-–∑–∞ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è?', 'options': [{'text': '–î–∞', 'score': 1}, {'text': '–ù–µ—Ç', 'score': 0}]},
    9: {'text': '–ë—Ä–æ—Å–∞–ª(–∞) –ª–∏ –æ–Ω/–æ–Ω–∞, –Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–ª—Å—è(–∞—Å—å) –∫ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—é?', 'options': [{'text': '–î–∞', 'score': 1}, {'text': '–ù–µ—Ç', 'score': 0}]},
    10: {'text': '–ï—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º, –≤—ã–∑–≤–∞–Ω–Ω—ã–µ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ–º?', 'options': [{'text': '–î–∞', 'score': 1}, {'text': '–ù–µ—Ç', 'score': 0}]}
}

def start(update: Update, context: CallbackContext):
    context.user_data['score'] = 0
    context.user_data['q'] = 1
    update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —á–µ–∫-–ª–∏—Å—Ç: <b>¬´10 –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, —á—Ç–æ –≤–∞—à –±–ª–∏–∑–∫–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏¬ª</b>\n\n"
        "–û—Ç–≤–µ—á–∞–π—Ç–µ —á–µ—Å—Ç–Ω–æ: <b>–î–∞</b> –∏–ª–∏ <b>–ù–µ—Ç</b>.\n\n–ü–æ–µ—Ö–∞–ª–∏!",
        parse_mode="HTML"
    )
    send_question(update, context)

def send_question(update: Update, context: CallbackContext):
    q_num = context.user_data['q']
    question = questions.get(q_num)
    if not question:
        show_result(update, context)
        return

    keyboard = [[InlineKeyboardButton(opt['text'], callback_data=str(opt['score']))] for opt in question['options']]
    reply_markup = InlineKeyboardMarkup(keyboard)
    if update.message:
        update.message.reply_text(question['text'], reply_markup=reply_markup)
    else:
        update.callback_query.edit_message_text(question['text'], reply_markup=reply_markup)

def button(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    score = int(query.data)
    context.user_data['score'] += score
    context.user_data['q'] += 1
    send_question(update, context)

def show_result(update: Update, context: CallbackContext):
    total = context.user_data['score']
    if total >= 6:
        text = "‚ö†Ô∏è –°–µ—Ä—å—ë–∑–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ."
    elif 3 <= total < 6:
        text = "üü° –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –µ—Å—Ç—å. –ù–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —Ç—Ä–µ–≤–æ–≥—É, –ª—É—á—à–µ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è."
    else:
        text = "üü¢ –ü–æ–∫–∞ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ. –ù–æ –±—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º –≤ –±—É–¥—É—â–µ–º."
    update.callback_query.edit_message_text(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {total} –∏–∑ 10.\n\n{text}")

def main():
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CallbackQueryHandler(button))
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
